import { createTheme } from "@vanilla-extract/css";
import { color } from "../vars.css";
import { Colors } from "../../../shared/tokens/colors.types";

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export function createThemeVars(lightToken: Colors, darkToken: Colors) {
  return createTheme(color, {
    // Light =====================================================
    // color
    primaryLight: lightToken.primary,
    onPrimaryLight: lightToken.onPrimary,
    secondaryLight: lightToken.secondary,
    onSecondaryLight: lightToken.onSecondary,
    tertiaryLight: lightToken.tertiary,
    onTertiaryLight: lightToken.onTertiary,
    errorLight: lightToken.error,
    onErrorLight: lightToken.onError,
    selectorLight: lightToken.selector,
    selectorDisabledLight: lightToken.selectorDisabled,
    successLight: lightToken.success,
    suggestLight: lightToken.suggest,
    sectionHeaderLight: lightToken.sectionHeader,

    // text color
    primaryTextLight: lightToken.primaryText,
    secondaryTextLight: lightToken.secondaryText,
    tertiaryDisabledTextLight: lightToken.tertiaryDisabledText,
    hyperlinksTextLight: lightToken.hyperlinksText,
    emphasisTextLight: lightToken.emphasisText,
    alertTextLight: lightToken.alertText,
    alertTextDisabledLight: lightToken.alertTextDisabled,
    brandPrimaryTextLight: lightToken.brandPrimaryText,
    brandPrimaryDisabledTextLight: lightToken.brandPrimaryDisabledText,
    brandSecondaryTextLight: lightToken.brandSecondaryText,
    inverseTextLight: lightToken.inverseText,
    inverseTextSecondaryLight: lightToken.inverseTextSecondary,
    onDarkTextLight: lightToken.onDarkText,

    // background
    backgroundLight: lightToken.background,
    backgroundSurfaceLight: lightToken.backgroundSurface,
    backgroundSurfaceBrightLight: lightToken.backgroundSurfaceBright,
    backgroundSubtlestLight: lightToken.backgroundSubtlest,
    backgroundSubtlerLight: lightToken.backgroundSubtler,
    backgroundSubtleLight: lightToken.backgroundSubtle,
    backgroundBoldLight: lightToken.backgroundBold,
    backgroundBolderLight: lightToken.backgroundBolder,
    backgroundBoldestLight: lightToken.backgroundBoldest,
    backgroundSuggestLight: lightToken.backgroundSuggest,
    backgroundDangerLight: lightToken.backgroundDanger,
    backgroundDangerHoverLight: lightToken.backgroundDangerHover,
    backgroundDangerDisabledLight: lightToken.backgroundDangerDisabled,
    backgroundDangerPressedLight: lightToken.backgroundDangerPressed,
    backgroundDangerTextHoverLight: lightToken.backgroundDangerTextHover,
    backgroundDangerTextPressedLight: lightToken.backgroundDangerTextPressed,
    backgroundAlertLight: lightToken.backgroundAlert,
    backgroundAlertBolderLight: lightToken.backgroundAlertBolder,
    backgroundPrimaryLight: lightToken.backgroundPrimary,
    backgroundPrimaryHoverLight: lightToken.backgroundPrimaryHover,
    backgroundPrimaryPressedLight: lightToken.backgroundPrimaryPressed,
    backgroundPrimaryDisabledLight: lightToken.backgroundPrimaryDisabled,
    backgroundNeutralLight: lightToken.backgroundNeutral,
    backgroundNatureHoverLight: lightToken.backgroundNatureHover,
    backgroundNaturePressedLight: lightToken.backgroundNaturePressed,
    backgroundMenuHoverLight: lightToken.backgroundMenuHover,
    backgroundMenuSelectedLight: lightToken.backgroundMenuSelected,
    backgroundChipGiftItLaterLight: lightToken.backgroundChipGiftItLater,
    backgroundChipGiftLight: lightToken.backgroundChipGift,
    backgroundChipGrayLight: lightToken.backgroundChipGray,
    backgroundChipBlueLight: lightToken.backgroundChipBlue,
    backgroundChipOrangeLight: lightToken.backgroundChipOrange,
    backgroundChipGreenLight: lightToken.backgroundChipGreen,
    backgroundActiveLight: lightToken.backgroundActive,
    backgroundDefaultLight: lightToken.backgroundDefault,
    backgroundPrimaryDarkLight: lightToken.backgroundPrimaryDark,
    backgroundSecondaryLight: lightToken.backgroundSecondary,
    backgroundTertiaryLight: lightToken.backgroundTertiary,
    backgroundInverseLight: lightToken.backgroundInverse,
    backgroundInverseSubtleLight: lightToken.backgroundInverseSubtle,
    backgroundBackdropLight: lightToken.backgroundBackdrop,
    backgroundGiftLight: lightToken.backgroundGift,
    backgroundOnDarkLight: lightToken.backgroundOnDark,
    backgroundReviewLight: lightToken.backgroundReview,
    backgroundUpdatedLight: lightToken.backgroundUpdated,
    backgroundSegmentedControlButtonHoverLight:
      lightToken.backgroundSegmentedControlButtonHover,
    backgroundSegmentedControlButtonPressedLight:
      lightToken.backgroundSegmentedControlButtonPressed,
    backgroundTableHeadLight: lightToken.backgroundTableHead,
    backgroundLabelCyanLight: lightToken.backgroundLabelCyan,
    backgroundLabelOrangeLight: lightToken.backgroundLabelOrange,
    backgroundLabelGreyLight: lightToken.backgroundLabelGrey,
    backgroundLabelPinkLight: lightToken.backgroundLabelPink,

    // border
    borderLight: lightToken.border,
    borderBoldLight: lightToken.borderBold,
    borderBoldDisabledLight: lightToken.borderBoldDisabled,
    borderInputLight: lightToken.borderInput,
    borderInputActiveLight: lightToken.borderInputActive,
    borderInputDisabledLight: lightToken.borderInputDisabled,
    borderInputErrorLight: lightToken.borderInputError,
    borderActiveLight: lightToken.borderActive,
    borderInactiveLight: lightToken.borderInactive,
    borderChipGrayLight: lightToken.borderChipGray,
    borderChipBlueLight: lightToken.borderChipBlue,
    borderChipOrangeLight: lightToken.borderChipOrange,
    borderChipGreenLight: lightToken.borderChipGreen,
    borderOnLightLight: lightToken.borderOnLight,
    borderLabelDefaultLight: lightToken.borderLabelDefault,
    borderLabelCyanLight: lightToken.borderLabelCyan,
    borderLabelOrangeLight: lightToken.borderLabelOrange,
    borderLabelGreyLight: lightToken.borderLabelGrey,
    borderLabelPinkLight: lightToken.borderLabelPink,

    // Dark =====================================================
    // color
    primaryDark: darkToken.primary,
    onPrimaryDark: darkToken.onPrimary,
    secondaryDark: darkToken.secondary,
    onSecondaryDark: darkToken.onSecondary,
    tertiaryDark: darkToken.tertiary,
    onTertiaryDark: darkToken.onTertiary,
    errorDark: darkToken.error,
    onErrorDark: darkToken.onError,
    selectorDark: darkToken.selector,
    selectorDisabledDark: darkToken.selectorDisabled,
    successDark: darkToken.success,
    suggestDark: darkToken.suggest,
    sectionHeaderDark: darkToken.sectionHeader,

    // text color
    primaryTextDark: darkToken.primaryText,
    secondaryTextDark: darkToken.secondaryText,
    tertiaryDisabledTextDark: darkToken.tertiaryDisabledText,
    hyperlinksTextDark: darkToken.hyperlinksText,
    emphasisTextDark: darkToken.emphasisText,
    alertTextDark: darkToken.alertText,
    alertTextDisabledDark: darkToken.alertTextDisabled,
    brandPrimaryTextDark: darkToken.brandPrimaryText,
    brandPrimaryDisabledTextDark: darkToken.brandPrimaryDisabledText,
    brandSecondaryTextDark: darkToken.brandSecondaryText,
    inverseTextDark: darkToken.inverseText,
    inverseTextSecondaryDark: darkToken.inverseTextSecondary,
    onDarkTextDark: darkToken.onDarkText,

    // background
    backgroundDark: darkToken.background,
    backgroundSurfaceDark: darkToken.backgroundSurface,
    backgroundSurfaceBrightDark: darkToken.backgroundSurfaceBright,
    backgroundSubtlestDark: darkToken.backgroundSubtlest,
    backgroundSubtlerDark: darkToken.backgroundSubtler,
    backgroundSubtleDark: darkToken.backgroundSubtle,
    backgroundBoldDark: darkToken.backgroundBold,
    backgroundBolderDark: darkToken.backgroundBolder,
    backgroundBoldestDark: darkToken.backgroundBoldest,
    backgroundSuggestDark: darkToken.backgroundSuggest,
    backgroundDangerDark: darkToken.backgroundDanger,
    backgroundDangerHoverDark: darkToken.backgroundDangerHover,
    backgroundDangerDisabledDark: darkToken.backgroundDangerDisabled,
    backgroundDangerPressedDark: darkToken.backgroundDangerPressed,
    backgroundDangerTextHoverDark: darkToken.backgroundDangerTextHover,
    backgroundDangerTextPressedDark: darkToken.backgroundDangerTextPressed,
    backgroundAlertDark: darkToken.backgroundAlert,
    backgroundAlertBolderDark: darkToken.backgroundAlertBolder,
    backgroundPrimaryDark: darkToken.backgroundPrimary,
    backgroundPrimaryHoverDark: darkToken.backgroundPrimaryHover,
    backgroundPrimaryPressedDark: darkToken.backgroundPrimaryPressed,
    backgroundPrimaryDisabledDark: darkToken.backgroundPrimaryDisabled,
    backgroundNeutralDark: darkToken.backgroundNeutral,
    backgroundNatureHoverDark: darkToken.backgroundNatureHover,
    backgroundNaturePressedDark: darkToken.backgroundNaturePressed,
    backgroundMenuHoverDark: darkToken.backgroundMenuHover,
    backgroundMenuSelectedDark: darkToken.backgroundMenuSelected,
    backgroundChipGiftItLaterDark: darkToken.backgroundChipGiftItLater,
    backgroundChipGiftDark: darkToken.backgroundChipGift,
    backgroundChipGrayDark: darkToken.backgroundChipGray,
    backgroundChipBlueDark: darkToken.backgroundChipBlue,
    backgroundChipOrangeDark: darkToken.backgroundChipOrange,
    backgroundChipGreenDark: darkToken.backgroundChipGreen,
    backgroundActiveDark: darkToken.backgroundActive,
    backgroundDefaultDark: darkToken.backgroundDefault,
    backgroundPrimaryDarkDark: darkToken.backgroundPrimaryDark,
    backgroundSecondaryDark: darkToken.backgroundSecondary,
    backgroundTertiaryDark: darkToken.backgroundTertiary,
    backgroundInverseDark: darkToken.backgroundInverse,
    backgroundInverseSubtleDark: darkToken.backgroundInverseSubtle,
    backgroundBackdropDark: darkToken.backgroundBackdrop,
    backgroundGiftDark: darkToken.backgroundGift,
    backgroundOnDarkDark: darkToken.backgroundOnDark,
    backgroundReviewDark: darkToken.backgroundReview,
    backgroundUpdatedDark: darkToken.backgroundUpdated,
    backgroundSegmentedControlButtonHoverDark:
      darkToken.backgroundSegmentedControlButtonHover,
    backgroundSegmentedControlButtonPressedDark:
      darkToken.backgroundSegmentedControlButtonPressed,
    backgroundTableHeadDark: darkToken.backgroundTableHead,
    backgroundLabelCyanDark: darkToken.backgroundLabelCyan,
    backgroundLabelOrangeDark: darkToken.backgroundLabelOrange,
    backgroundLabelGreyDark: darkToken.backgroundLabelGrey,
    backgroundLabelPinkDark: darkToken.backgroundLabelPink,

    // border
    borderDark: darkToken.border,
    borderBoldDark: darkToken.borderBold,
    borderBoldDisabledDark: darkToken.borderBoldDisabled,
    borderInputDark: darkToken.borderInput,
    borderInputActiveDark: darkToken.borderInputActive,
    borderInputDisabledDark: darkToken.borderInputDisabled,
    borderInputErrorDark: darkToken.borderInputError,
    borderActiveDark: darkToken.borderActive,
    borderInactiveDark: darkToken.borderInactive,
    borderChipGrayDark: darkToken.borderChipGray,
    borderChipBlueDark: darkToken.borderChipBlue,
    borderChipOrangeDark: darkToken.borderChipOrange,
    borderChipGreenDark: darkToken.borderChipGreen,
    borderOnLightDark: darkToken.borderOnLight,
    borderLabelDefaultDark: darkToken.borderLabelDefault,
    borderLabelCyanDark: darkToken.borderLabelCyan,
    borderLabelOrangeDark: darkToken.borderLabelOrange,
    borderLabelGreyDark: darkToken.borderLabelGrey,
    borderLabelPinkDark: darkToken.borderLabelPink,

    // General =====================================================
    inherit: "inherit",
    transparent: "transparent",
  });
}
